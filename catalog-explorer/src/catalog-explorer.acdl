// Copyright 2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: LicenseRef-.amazon.com.-AmznSL-1.0
// Licensed under the Amazon Software License  http://aws.amazon.com/asl/

namespace com.amazon.alexa.skill.components.catalog_explorer

import com.amazon.alexa.ask.conversations.*
import com.amazon.ask.types.builtins.AMAZON.*
import com.amazon.alexa.schema.*
import com.amazon.alexa.skill.components.catalog_explorer.action.*
import com.amazon.alexa.skill.components.catalog_explorer.navigate.*
import com.amazon.alexa.skill.components.catalog_explorer.properties.*
import com.amazon.alexa.skill.components.catalog_explorer.search.*
import com.amazon.alexa.skill.components.catalog_explorer.types.*

// main Catalog Explorer dialog; returns result of a action performed after
// the user is finished exploring the catalog
dialog CatalogExplorationResult<Item> exploreCatalog<SearchConditions, Item, ItemName>(
    CatalogConfig<SearchConditions, Item, ItemName> config,
    optional CatalogReference catalogRef
   ) 
   { 
        sample {
        // Expanded search with limited everything else:
        //  all-search, nav-next, followUp[0]/passthrough, action[0]
            search = config.dialogConfig.allSearchPathsAdaptor
            searchResult = search(config.propertyConfig, catalogRef)//anon dialog
            navResult = navigateNext(config.propertyConfig,searchResult, catalogRef)
            followUpResult = requestPropertyValue_WithPassthrough(config.propertyConfig, config.propertyConfig.properties[0], navResult, catalogRef)
            performedAction = performCatalogAction(config.propertyConfig.catalogActions[0], followUpResult.recommendations.items, catalogRef)
            CatalogExplorationResult<Item>{actionPerformed=performedAction, item = followUpResult.recommendations.items[0]}
        }
        
        // Expanded navigation with limited everything else: 
        // search[0], all-nav/passthrough, followUp[0]/passthrough, action[0]
        sample {
            searchResult = searchForItem_Index0(config.propertyConfig ,catalogRef)
            navResult = allNavigationPaths_WithPassthrough(config.propertyConfig,searchResult, catalogRef)
            followUpResult = requestPropertyValue_WithPassthrough(config.propertyConfig, config.propertyConfig.properties[0], navResult, catalogRef)
            performedAction = performCatalogAction(config.propertyConfig.catalogActions[0], followUpResult.recommendations.items, catalogRef)
            CatalogExplorationResult<Item>{actionPerformed=performedAction, item = followUpResult.recommendations.items[0]}
        }
    
        // Expanded follow-ups with limited everything else: 
        // search[0], nav-next, all-followUp/passthrough, action[0]
        sample {
            searchResult = searchForItem_Index0(config.propertyConfig, catalogRef)
            navResult = navigateNext(config.propertyConfig,searchResult, catalogRef)
            followup= config.dialogConfig.allFollowUpPathsAdaptor
            followUpResult = followup(config.propertyConfig,navResult,catalogRef) 
            performedAction = performCatalogAction(config.propertyConfig.catalogActions[0], followUpResult.recommendations.items, catalogRef)
            CatalogExplorationResult<Item>{actionPerformed=performedAction, item = followUpResult.recommendations.items[0]}
        }
    
        // Expanded actions with limited everything else: 
        // search[0], nav-next, followUp[0]/passthrough, all-action
        sample {
            searchResult = searchForItem_Index0(config.propertyConfig, catalogRef)
            navResult = navigateNext(config.propertyConfig,searchResult, catalogRef)
            followUpResult = requestPropertyValue_WithPassthrough(config.propertyConfig, config.propertyConfig.properties[0], navResult, catalogRef)
            action=config.dialogConfig.allCatalogActionPathsAdaptor
            performedAction = action(config.propertyConfig, followUpResult.recommendations.items, catalogRef)
            CatalogExplorationResult<Item>{actionPerformed=performedAction, item = followUpResult.recommendations.items[0]}
        }
    
        // Expanded modeling of back-to-back Search turns with limited everything else: 
        // base-search, base-search, nav-next, followUp[0]/passthrough, action[0]
        // Combinations of two back-back search turns are generated (including variations of arguments), but
        // no modeling of proactive hints is done in this sample.
        sample {
            search= config.dialogConfig.baseSearchPathsAdaptor
            initialResult = search(config.propertyConfig, catalogRef)//anon dialog
            searchResult = search(config.propertyConfig, catalogRef) //anon dialog
            navResult = allNavigationPaths_WithPassthrough(config.propertyConfig,searchResult, catalogRef)
            followUpResult = requestPropertyValue_WithPassthrough(config.propertyConfig, config.propertyConfig.properties[0], navResult, catalogRef)
            performedAction =performCatalogAction(config.propertyConfig.catalogActions[0], followUpResult.recommendations.items, catalogRef)
            CatalogExplorationResult<Item>{actionPerformed=performedAction, item = followUpResult.recommendations.items[0]}
        }
   
   }