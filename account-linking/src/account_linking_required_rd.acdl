namespace com.amazon.alexa.skill.components.acc_linking.required

import com.amazon.alexa.ask.conversations.*
import displays.*
import slotTypes.AccountLinkingStatus

// Type Declaration
type isAccountLinkedResponseType {
    AccountLinkingStatus accountLinkedStatus
}

// Default response
dRDAPLN = apl("../response/display/DefaultAccountLinkingRDAPL/document.json")
dRDAPLAN = apla("../response/prompts/DefaultAccountLinkingRDAPL-A/document.json")

dRDAPLY = apl("../response/display/DefaultAccountLinkedRDAPL/document.json")
dRDAPLAY = apla("../response/prompts/DefaultAccountLinkedRDAPL-A/document.json")

defUnlinkedResponse = MultiModalResponse {
    apla =  dRDAPLAN,
    apl = dRDAPLN
}

defLinkedResponse = MultiModalResponse {
    apla =  dRDAPLAY,
    apl = dRDAPLY
}

// Skill API Declaration
action isAccountLinkedResponseType isAccountLinked()

// Dialogs Declarations
dialog void validateAccountIsLinked(Response linkingRequiredPrompt = defUnlinkedResponse, Response linkedAccountPrompt = defLinkedResponse) {
    sample {
        // <detects absence/presence of access token in request>.
        isAccountLinkedResponse = isAccountLinked()
        if (isAccountLinkedResponse.accountLinkedStatus == "unlinked") {
            // A: Before I can ..., you need to linked your account. Please visit the Alexa app to link your account. 
            // {send Account Linking Card}
            response(act = Notify {actionName = isAccountLinked},
                nextAct = Bye {},
                response = linkingRequiredPrompt
            )
        }
        else {
            // {send Account is linked prompt}
            response(act = Notify {actionName = isAccountLinked},
                nextAct = nothing,
                response = linkedAccountPrompt
            )
        }  
    }
}
